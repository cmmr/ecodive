[{"path":"https://cmmr.github.io/fastbiom/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 fastbiom authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"UniFrac Calculations","text":"different UniFrac algorithms listed , along examples calculating .","code":""},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input Data","title":"UniFrac Calculations","text":"OTU matrix two samples five OTUs. phylogenetic tree five OTUs. Shown transposed. Fastbiom expects samples columns OTUs rows.","code":"mtx <- matrix(   data     = c(0, 0, 9, 3, 3, 1, 4, 2, 8, 0),    nrow     = 5,    dimnames = list(paste0('OTU_', 1:5), paste0('Sample_', 1:2)) )  phy <- fastbiom::read_tree(   newick      = \"(((OTU_1:0.8,OTU_2:0.5):0.4,OTU_3:0.9):0.2,(OTU_4:0.7,OTU_5:0.3):0.6);\",   underscores = TRUE )  L <- phy$edge.length A <- c(9,0,0,0,9,6,3,3) B <- c(7,5,1,4,2,8,8,0) knitr::kable(t(mtx), format=\"html\", table.attr='class=\"otu_matrix\" cellspacing=\"0\"', align='c') par(xpd = NA) ape::plot.phylo(   x          = phy,    direction  = 'downwards',    srt        = 90,    adj        = 0.5,    no.margin  = TRUE,   underscore = TRUE,   x.lim      = c(0.5, 5.5) )  ape::edgelabels(phy$edge.length, bg = 'white', frame = 'none', adj = -0.4)"},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"definitions","dir":"Articles","previous_headings":"","what":"Definitions","title":"UniFrac Calculations","text":"branch indices (green circles) used ordering L, , B arrays. Values L drawn input phylogenetic tree. Values B total number OTU observations descending branch; Sample_1, B Sample_2.","code":"local({      phy$edge.length <- c(1, 1, 1, 1, 2, 1, 2, 2)      par(xpd = NA)   ape::plot.phylo(     x               = phy,      direction       = 'downwards',      srt             = 90,      adj             = 0.5,      no.margin       = TRUE,     underscore      = TRUE,     x.lim           = c(.8, 6) )      ape::edgelabels(1:8, frame = 'circle')      ape::edgelabels(paste('A =', A), bg = 'white', frame = 'none', adj = c(-0.4, -1.2))   ape::edgelabels(paste('B =', B), bg = 'white', frame = 'none', adj = c(-0.4,  0.0))   ape::edgelabels(paste('L =', L), bg = 'white', frame = 'none', adj = c(-0.3,  1.2)) })"},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"unweighted","dir":"Articles","previous_headings":"","what":"Unweighted","title":"UniFrac Calculations","text":"Lozupone et al, 2005: Unweighted UniFrac R Package fastbiom: unweighted_unifrac() R Package phyloseq: UniFrac(weighted=FALSE) R Package abdiv: unweighted_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric unweighted_unifrac mothur: unifrac.unweighted() First, transform B presence (1) absence (0) indicators. \\begin{align*}  &= \\{9, 0, 0, 0, 9, 6, 3, 3\\} \\\\ ' &= \\{1, 0, 0, 0, 1, 1, 1, 1\\} \\end{align*} \\begin{align*} B  &= \\{7, 5, 1, 4, 2, 8, 8, 0\\} \\\\ B' &= \\{1, 1, 1, 1, 1, 1, 1, 0\\} \\end{align*} apply formula: \\begin{align*} U &= \\displaystyle \\frac{\\sum_{= 1}^{n} L_i(|'_i - B'_i|)}{\\sum_{= 1}^{n} L_i(max('_i,B'_i))}  \\\\ \\\\ U &= \\displaystyle \\frac{L_1(|'_1-B'_1|) + L_2(|'_2-B'_2|) + \\cdots + L_n(|'_n-B'_n|)}{L_1(max('_1,B'_1)) + L_2(max('_2,B'_2)) + \\cdots + L_n(max('_n,B'_n))}  \\\\ \\\\ U &= \\displaystyle \\frac{0.2(|1-1|) + 0.4(|0-1|) + \\cdots + 0.3(|1-0|)}{0.2(max(1,1)) + 0.4(max(0,1)) + \\cdots + 0.3(max(1,0))}  \\\\ \\\\ U &= \\displaystyle \\frac{0.2(0) + 0.4(1) + 0.8(1) + 0.5(1) + 0.9(0) + 0.6(0) + 0.7(0) + 0.3(1)}{0.2(1) + 0.4(1) + 0.8(1) + 0.5(1) + 0.9(1) + 0.6(1) + 0.7(1) + 0.3(1)}  \\\\ \\\\ U &= \\displaystyle \\frac{0.4 + 0.8 + 0.5 + 0.3}{0.2 + 0.4 + 0.8 + 0.5 + 0.9 + 0.6 + 0.7 + 0.3}  \\\\ \\\\ U &= \\displaystyle \\frac{2}{4.4}  \\\\ \\\\ U &= 0.4545455 \\end{align*}","code":""},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"weighted","dir":"Articles","previous_headings":"","what":"Weighted","title":"UniFrac Calculations","text":"Lozupone et al, 2007: Raw Weighted UniFrac R Package fastbiom: weighted_unifrac() R Package phyloseq: UniFrac(weighted=TRUE, normalized=FALSE) R Package abdiv: weighted_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric weighted_unifrac \\begin{align*} W &= \\sum_{= 1}^{n} L_i|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|  \\\\ \\\\ W &= L_1|\\frac{A_1}{A_T} - \\frac{B_1}{B_T}| + L_2|\\frac{A_2}{A_T} - \\frac{B_2}{B_T}| + \\cdots + L_n|\\frac{A_n}{A_T} - \\frac{B_n}{B_T}|  \\\\ \\\\ W &= 0.2|\\frac{9}{15} - \\frac{7}{15}| + 0.4|\\frac{0}{15} - \\frac{5}{15}| + \\cdots + 0.3|\\frac{3}{15} - \\frac{0}{15}|  \\\\ \\\\ W &= 0.02\\overline{6} + 0.1\\overline{3} + 0.05\\overline{3} + 0.1\\overline{3} + 0.42 + 0.08 + 0.2\\overline{3} + 0.06  \\\\ \\\\ W &= 1.14 \\end{align*}","code":""},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"normalized","dir":"Articles","previous_headings":"","what":"Normalized","title":"UniFrac Calculations","text":"Lozupone et al, 2007: Normalized Weighted UniFrac R Package fastbiom: normalized_unifrac() R Package phyloseq: UniFrac(weighted=TRUE, normalized=TRUE) R Package abdiv: weighted_normalized_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric weighted_normalized_unifrac mothur: unifrac.weighted() \\begin{align*}  N &= \\displaystyle \\frac   {\\sum_{= 1}^{n} L_i|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|}   {\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})}   \\\\ \\\\    N &= \\displaystyle \\frac   {L_1|\\frac{A_1}{A_T} - \\frac{B_1}{B_T}| + L_2|\\frac{A_2}{A_T} - \\frac{B_2}{B_T}| + \\cdots + L_n|\\frac{A_n}{A_T} - \\frac{B_n}{B_T}|}   {L_1(\\frac{A_1}{A_T} + \\frac{B_1}{B_T}) + L_2(\\frac{A_2}{A_T} + \\frac{B_2}{B_T}) + \\cdots + L_n(\\frac{A_n}{A_T} + \\frac{B_n}{B_T})}   \\\\ \\\\    N &= \\displaystyle \\frac   {0.2|\\frac{9}{15} - \\frac{7}{15}| + 0.4|\\frac{0}{15} - \\frac{5}{15}| + \\cdots + 0.3|\\frac{3}{15} - \\frac{0}{15}|}   {0.2(\\frac{9}{15} + \\frac{7}{15}) + 0.4(\\frac{0}{15} + \\frac{5}{15}) + \\cdots + 0.3(\\frac{3}{15} + \\frac{0}{15})}   \\\\ \\\\    N &= \\displaystyle \\frac   {0.02\\overline{6} + 0.1\\overline{3} + 0.05\\overline{3} + 0.1\\overline{3} + 0.42 + 0.08 + 0.2\\overline{3} + 0.06}   {0.21\\overline{3} + 0.1\\overline{3} + 0.05\\overline{3} + 0.1\\overline{3} + 0.66 + 0.56 + 0.51\\overline{3} + 0.06}   \\\\ \\\\    N &= \\displaystyle \\frac{1.14}{2.326667}  \\\\ \\\\ N &= 0.4899713 \\end{align*}","code":""},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"generalized","dir":"Articles","previous_headings":"","what":"Generalized","title":"UniFrac Calculations","text":"Chen et al. 2012: Generalized UniFrac R Package fastbiom: generalized_unifrac(alpha = 0.5) R Package GUniFrac: GUniFrac(alpha = 0.5) R Package abdiv: generalized_unifrac(alpha = 0.5) qiime2 qiime diversity beta-phylogenetic --p-metric generalized_unifrac -0.5 \\begin{align*}  G &= \\displaystyle \\frac   {\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})^{\\alpha}     |\\displaystyle \\frac       {\\frac{A_i}{A_T} - \\frac{B_i}{B_T}}       {\\frac{A_i}{A_T} + \\frac{B_i}{B_T}} |}   {\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})^{\\alpha}}  \\\\ \\\\  G &= \\displaystyle \\frac   {     L_1(\\frac{A_1}{A_T} + \\frac{B_1}{B_T})^{0.5}       |\\displaystyle \\frac         {\\frac{A_1}{A_T} - \\frac{B_1}{B_T}}         {\\frac{A_1}{A_T} + \\frac{B_1}{B_T}}| +     \\cdots +     L_n(\\frac{A_n}{A_T} + \\frac{B_n}{B_T})^{0.5}       |\\displaystyle \\frac         {\\frac{A_n}{A_T} - \\frac{B_n}{B_T}}         {\\frac{A_n}{A_T} + \\frac{B_n}{B_T}}|   }{     L_1(\\frac{A_1}{A_T} + \\frac{B_1}{B_T})^{0.5} +     \\cdots +     L_n(\\frac{A_n}{A_T} + \\frac{B_n}{B_T})^{0.5}   }     \\\\ \\\\  G &= \\displaystyle \\frac   {     0.2(\\frac{9}{15} + \\frac{7}{15})^{0.5}       |\\displaystyle \\frac         {\\frac{9}{15} - \\frac{7}{15}}         {\\frac{9}{15} + \\frac{7}{15}}| +     \\cdots +     0.3(\\frac{3}{15} + \\frac{0}{15})^{0.5}       |\\displaystyle \\frac         {\\frac{3}{15} - \\frac{0}{15}}         {\\frac{3}{15} + \\frac{0}{15}}|   }{     0.2(\\frac{9}{15} + \\frac{7}{15})^{0.5} +     \\cdots +     0.3(\\frac{3}{15} + \\frac{0}{15})^{0.5}   }     \\\\ \\\\    G &\\approx \\displaystyle \\frac   {0.03 + 0.23 + 0.21 + 0.26 + 0.49 + 0.08 + 0.27 + 0.13}   {0.21 + 0.23 + 0.21 + 0.26 + 0.77 + 0.58 + 0.60 + 0.13}   \\\\ \\\\    G &= \\displaystyle \\frac{1.701419}{2.986235}  \\\\ \\\\ G &= 0.569754  \\end{align*}","code":""},{"path":"https://cmmr.github.io/fastbiom/articles/unifrac.html","id":"variance-adjusted","dir":"Articles","previous_headings":"","what":"Variance Adjusted","title":"UniFrac Calculations","text":"Chang et al, 2011: Variance Adjusted Weighted (VAW) UniFrac R Package fastbiom: variance_adjusted_unifrac() R Package abdiv: variance_adjusted_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric weighted_normalized_unifrac --p-variance-adjusted \\begin{align*}  V &= \\displaystyle \\frac   {\\sum_{= 1}^{n} L_i\\displaystyle \\frac     {|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|}     {\\sqrt{(A_i + B_i)(A_T + B_T - A_i - B_i)}} }   {\\sum_{= 1}^{n} L_i\\displaystyle \\frac     {\\frac{A_i}{A_T} + \\frac{B_i}{B_T}}     {\\sqrt{(A_i + B_i)(A_T + B_T - A_i - B_i)}} }  \\\\ \\\\  V &= \\displaystyle \\frac   {     L_1\\displaystyle \\frac     {|\\frac{A_1}{A_T} - \\frac{B_1}{B_T}|}     {\\sqrt{(A_1 + B_1)(A_T + B_T - A_1 - B_1)}} +     \\cdots +     L_n\\displaystyle \\frac     {|\\frac{A_n}{A_T} - \\frac{B_n}{B_T}|}     {\\sqrt{(A_n + B_n)(A_T + B_T - A_n - B_n)}}   }{     L_1\\displaystyle \\frac     {\\frac{A_1}{A_T} + \\frac{B_1}{B_T}}     {\\sqrt{(A_1 + B_1)(A_T + B_T - A_1 - B_1)}} +     \\cdots +     L_n\\displaystyle \\frac     {\\frac{A_n}{A_T} + \\frac{B_n}{B_T}}     {\\sqrt{(A_n + B_n)(A_T + B_T - A_n - B_n)}}   }     \\\\ \\\\  V &= \\displaystyle \\frac   {     0.2\\displaystyle \\frac     {|\\frac{9}{15} - \\frac{7}{15}|}     {\\sqrt{(9 + 7)(15 + 15 - 9 - 7)}} +     \\cdots +     0.3\\displaystyle \\frac     {|\\frac{3}{15} - \\frac{0}{15}|}     {\\sqrt{(3 + 0)(15 + 15 - 3 - 0)}}   }{     0.2\\displaystyle \\frac     {\\frac{9}{15} + \\frac{7}{15}}     {\\sqrt{(9 + 7)(15 + 15 - 9 - 7)}} +     \\cdots +     0.3\\displaystyle \\frac     {\\frac{3}{15} + \\frac{0}{15}}     {\\sqrt{(3 + 0)(15 + 15 - 3 - 0)}}   }     \\\\ \\\\    V &\\approx \\displaystyle \\frac   {0.002 + 0.012 + 0.010 + 0.013 + 0.029 + 0.005 + 0.016 + 0.007}   {0.014 + 0.012 + 0.010 + 0.013 + 0.046 + 0.037 + 0.036 + 0.007}   \\\\ \\\\    V &= \\displaystyle \\frac{4.09389}{4.174402}  \\\\ \\\\ V &= 0.9807128  \\end{align*}","code":""},{"path":"https://cmmr.github.io/fastbiom/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel P. Smith. Author, maintainer. Alkek Center Metagenomics Microbiome Research. Copyright holder, funder.","code":""},{"path":"https://cmmr.github.io/fastbiom/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith D (2025). fastbiom: Microbiome Algorithms Implemented 'C'. R package version 1.0.0, https://cmmr.github.io/fastbiom/.","code":"@Manual{,   title = {fastbiom: Microbiome Algorithms Implemented in 'C'},   author = {Daniel P. Smith},   year = {2025},   note = {R package version 1.0.0},   url = {https://cmmr.github.io/fastbiom/}, }"},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"fastbiom","dir":"","previous_headings":"","what":"Microbiome Algorithms Implemented in C","title":"Microbiome Algorithms Implemented in C","text":"fastbiom provides fastest implementations : 5 alpha diversity metrics: Shannon, Simpson, Inverse Simpson, Chao1, Faith’s Phylogenetic Diversity. 12 beta diversity metrics: Bray Curtis, Canberra, Euclidean, Gower, Jaccard, Kulczynski, Manhattan, Unweighted UniFrac, Weighted UniFrac, Normalized UniFrac, Generalized UniFrac, Variance Adjusted UniFrac. Count matrix rarefaction Newick file parsing","code":""},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Microbiome Algorithms Implemented in C","text":"latest stable version can installed CRAN. development version available GitHub.","code":"install.packages('fastbiom') install.packages('pak') pak::pak('cmmr/fastbiom')"},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"calculate-alpha-diverity","dir":"","previous_headings":"Usage","what":"Calculate alpha diverity","title":"Microbiome Algorithms Implemented in C","text":"","code":"ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1  shannon(ex_counts) #>         A         B         C         D  #> 1.3095258 0.6662784 0.6853142 0.3046361   faith(ex_counts, tree = ex_tree) #>   A   B   C   D  #> 3.4 2.2 2.2 2.2"},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"calculate-beta-diverity","dir":"","previous_headings":"Usage","what":"Calculate beta diverity","title":"Microbiome Algorithms Implemented in C","text":"","code":"bray_curtis(ex_counts) #>           A         B         C #> B 0.6428571                     #> C 0.6129032 0.1034483           #> D 0.9230769 0.2500000 0.2592593  generalized_unifrac(ex_counts, tree = ex_tree, alpha = 0.5) #>            A          B          C #> B 0.61036006                       #> C 0.60260471 0.04873043            #> D 0.75764452 0.25262174 0.29851111"},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Microbiome Algorithms Implemented in C","text":"online manual fastbiom available https://cmmr.github.io/fastbiom/. includes getting started guide, articles explore specific use cases, reference pages function.","code":""},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"automated-tests","dir":"","previous_headings":"","what":"Automated tests","title":"Microbiome Algorithms Implemented in C","text":"following commands check fastbiom passes bundled testing suite.","code":"install.packages('testthat') testthat::test_check('fastbiom')"},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"support","dir":"","previous_headings":"Community guidelines","what":"Support","title":"Microbiome Algorithms Implemented in C","text":"Bug reports, feature requests, general questions can submitted https://github.com/cmmr/fastbiom/issues.","code":""},{"path":"https://cmmr.github.io/fastbiom/index.html","id":"contributing","dir":"","previous_headings":"Community guidelines","what":"Contributing","title":"Microbiome Algorithms Implemented in C","text":"Pull requests welcome. Please ensure contributed code covered tests documentation (add additional tests documentation needed) passes automated tests.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/bray_curtis.html","id":null,"dir":"Reference","previous_headings":"","what":"Bray-Curtis beta diversity metric — bray_curtis","title":"Bray-Curtis beta diversity metric — bray_curtis","text":"Bray-Curtis beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/bray_curtis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bray-Curtis beta diversity metric — bray_curtis","text":"","code":"bray_curtis(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/bray_curtis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bray-Curtis beta diversity metric — bray_curtis","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/bray_curtis.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Bray-Curtis beta diversity metric — bray_curtis","text":"formulas , x y two columns (samples) counts. n number rows (OTUs) counts.","code":"x <- c(4, 0, 3, 2, 6)   y <- c(0, 8, 0, 0, 5)   sum(abs(x-y)) / sum(x+y)   #>  0.6428571"},{"path":"https://cmmr.github.io/fastbiom/reference/bray_curtis.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Bray-Curtis beta diversity metric — bray_curtis","text":"Sorenson T 1948. method establishing groups equal amplitude plant sociology based similarity species content. Kongelige Danske Videnskabernes Selskab, 5.","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/bray_curtis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bray-Curtis beta diversity metric — bray_curtis","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Bray-Curtis weighted distance matrix     bray_curtis(ex_counts) #>           A         B         C #> B 0.6428571                     #> C 0.6129032 0.1034483           #> D 0.9230769 0.2500000 0.2592593          # Bray-Curtis unweighted distance matrix     bray_curtis(ex_counts, weighted = FALSE) #>           A         B         C #> B 0.6666667                     #> C 0.6666667 0.0000000           #> D 0.6666667 0.0000000 0.0000000          # Only calculate distances for A vs all.     bray_curtis(ex_counts, pairs = 1:3) #>           A         B         C #> B 0.6428571                     #> C 0.6129032        NA           #> D 0.9230769        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/canberra.html","id":null,"dir":"Reference","previous_headings":"","what":"Canberra beta diversity metric — canberra","title":"Canberra beta diversity metric — canberra","text":"Canberra beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/canberra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Canberra beta diversity metric — canberra","text":"","code":"canberra(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/canberra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Canberra beta diversity metric — canberra","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/canberra.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Canberra beta diversity metric — canberra","text":"formulas , x y two columns (samples) counts. n number rows (OTUs) counts. OTUs must removed absent samples.","code":"x <- c(4, 0, 3, 0, 6)[-4]   y <- c(0, 8, 0, 0, 5)[-4]   sum(abs(x-y) / (x+y)) / length(x)   #>  0.7727273"},{"path":"https://cmmr.github.io/fastbiom/reference/canberra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Canberra beta diversity metric — canberra","text":"Lance, Godfrey LN, Williams WT 1967. general theory classificatory sorting strategies II. Clustering systems. computer journal, 10(3). https://doi.org/10.1093/comjnl/10.3.271","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/canberra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Canberra beta diversity metric — canberra","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Gower weighted distance matrix     canberra(ex_counts) #>           A         B         C #> B 0.8181818                     #> C 0.8153846 0.1127451           #> D 0.9428571 0.3888889 0.4013158          # Gower unweighted distance matrix     canberra(ex_counts, weighted = FALSE) #>     A   B   C #> B 0.8         #> C 0.8 0.0     #> D 0.8 0.0 0.0          # Only calculate distances for A vs all.     canberra(ex_counts, pairs = 1:3) #>           A         B         C #> B 0.8181818                     #> C 0.8153846        NA           #> D 0.9428571        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/chao1.html","id":null,"dir":"Reference","previous_headings":"","what":"Chao1 alpha diversity metric — chao1","title":"Chao1 alpha diversity metric — chao1","text":"non-parametric estimator number unobserved species sample. Chao1 index estimates total species richness based number species occur (singletons) twice (doubletons) sample.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/chao1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Chao1 alpha diversity metric — chao1","text":"","code":"chao1(counts, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/chao1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Chao1 alpha diversity metric — chao1","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/chao1.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Chao1 alpha diversity metric — chao1","text":"Prerequisite: counts whole numbers. formulas , x single column (sample) counts. \\(n\\) total number non-zero OTUs, \\(\\) number singletons, \\(b\\) number doubletons. Note \\(x\\) singletons doubletons (\\(= 0, b = 0\\)), result NaN. \\(x\\) singletons doubletons (\\(> 0, b = 0\\)), result Inf.","code":"x <- c(1, 0, 3, 2, 6)   sum(x>0) + (sum(x==1) ^ 2) / (2 * sum(x==2))   #>  4.5"},{"path":"https://cmmr.github.io/fastbiom/reference/chao1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Chao1 alpha diversity metric — chao1","text":"Chao 1984. Non-parametric estimation number classes population. Scandinavian Journal Statistics, 11:265-270.","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/chao1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Chao1 alpha diversity metric — chao1","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Chao1 diversity values     chao1(ex_counts) #>   A   B   C   D  #>   4 NaN NaN Inf           # Low diversity     chao1(c(100, 1, 1, 1, 1)) # Inf #> [1] Inf          # High diversity     chao1(c(20, 20, 20, 20, 20)) # NaN #> [1] NaN          # Low richness     chao1(1:3) # 3.5 #> [1] 3.5          # High richness     chao1(1:100) # 100.5 #> [1] 100.5"},{"path":"https://cmmr.github.io/fastbiom/reference/documentation.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation — documentation","title":"documentation — documentation","text":"documentation","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/documentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation — documentation","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. normalized weighted UniFrac , normalize distances total branch length. Options: TRUE FALSE. alpha much weight give relative abundances; value 0 1, inclusive. Setting alpha=1 equivalent normalized_unifrac(). tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/euclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Euclidean beta diversity metric — euclidean","title":"Euclidean beta diversity metric — euclidean","text":"Euclidean beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/euclidean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euclidean beta diversity metric — euclidean","text":"","code":"euclidean(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/euclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euclidean beta diversity metric — euclidean","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/euclidean.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Euclidean beta diversity metric — euclidean","text":"formulas , x y two columns (samples) counts. n number rows (OTUs) counts.","code":"x <- c(4, 0, 3, 2, 6)   y <- c(0, 8, 0, 0, 5)   sqrt(sum((x-y)^2))   #>  9.69536"},{"path":"https://cmmr.github.io/fastbiom/reference/euclidean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Euclidean beta diversity metric — euclidean","text":"Legendre P, Caceres M 2013. Beta diversity variance community data: dissimilarity coefficients partitioning. Ecology Letters. 16(8). https://doi.org/10.1111/ele.12141","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/euclidean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euclidean beta diversity metric — euclidean","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Euclidean weighted distance matrix     euclidean(ex_counts) #>           A         B         C #> B  9.695360                     #> C 10.535654  2.236068           #> D 12.409674  4.472136  6.082763          # Euclidean unweighted distance matrix     euclidean(ex_counts, weighted = FALSE) #>   A B C #> B 2     #> C 2 0   #> D 2 0 0          # Only calculate distances for A vs all.     euclidean(ex_counts, pairs = 1:3) #>          A        B        C #> B  9.69536                   #> C 10.53565       NA          #> D 12.40967       NA       NA"},{"path":"https://cmmr.github.io/fastbiom/reference/ex_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Example counts matrix — ex_counts","title":"Example counts matrix — ex_counts","text":"Example counts matrix","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/ex_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example counts matrix — ex_counts","text":"","code":"ex_counts"},{"path":"https://cmmr.github.io/fastbiom/reference/ex_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example counts matrix — ex_counts","text":"matrix 4 samples (column) x 5 OTUs (rows).","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/ex_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Example phylogenetic tree — ex_tree","title":"Example phylogenetic tree — ex_tree","text":"Example phylogenetic tree","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/ex_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example phylogenetic tree — ex_tree","text":"","code":"ex_tree"},{"path":"https://cmmr.github.io/fastbiom/reference/ex_tree.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example phylogenetic tree — ex_tree","text":"phylo object 5 OTUs.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/faith.html","id":null,"dir":"Reference","previous_headings":"","what":"Faith's phylogenetic diversity metric — faith","title":"Faith's phylogenetic diversity metric — faith","text":"higher value indicates greater amount evolutionary history represented within community, suggesting higher biodiversity terms evolutionary relationships.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/faith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Faith's phylogenetic diversity metric — faith","text":"","code":"faith(counts, tree, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/faith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Faith's phylogenetic diversity metric — faith","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/faith.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Faith's phylogenetic diversity metric — faith","text":"Given \\(n\\) branches lengths \\(L\\) sample's abundances branches coded 1 present 0 absent: $$\\sum_{= 1}^{n} P_i \\times L_i$$","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/faith.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Faith's phylogenetic diversity metric — faith","text":"Faith DP 1992. Conservation evaluation phylogenetic diversity. Biological Conservation, 61:1-10. https://doi.org/10.1016/0006-3207(92)91201-3","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/faith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Faith's phylogenetic diversity metric — faith","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Faith diversity values     faith(ex_counts, tree = ex_tree) #>   A   B   C   D  #> 3.4 2.2 2.2 2.2"},{"path":"https://cmmr.github.io/fastbiom/reference/generalized_unifrac.html","id":null,"dir":"Reference","previous_headings":"","what":"Generalized UniFrac beta diversity metric — generalized_unifrac","title":"Generalized UniFrac beta diversity metric — generalized_unifrac","text":"Generalized UniFrac beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/generalized_unifrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generalized UniFrac beta diversity metric — generalized_unifrac","text":"","code":"generalized_unifrac(   counts,   tree = NULL,   alpha = 0.5,   pairs = NULL,   cpus = n_cpus() )"},{"path":"https://cmmr.github.io/fastbiom/reference/generalized_unifrac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generalized UniFrac beta diversity metric — generalized_unifrac","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). alpha much weight give relative abundances; value 0 1, inclusive. Setting alpha=1 equivalent normalized_unifrac(). pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/generalized_unifrac.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Generalized UniFrac beta diversity metric — generalized_unifrac","text":"Given \\(n\\) branches lengths \\(L\\), pair samples' abundances (\\(\\) \\(B\\)) branches, abundance weighting \\(0 \\le \\alpha \\le 1\\): $$\\displaystyle \\frac{\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})^{\\alpha}|\\displaystyle \\frac{\\frac{A_i}{A_T} - \\frac{B_i}{B_T}}{\\frac{A_i}{A_T} + \\frac{B_i}{B_T}} |}{\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})^{\\alpha}}$$ See https://cmmr.github.io/fastbiom/articles/unifrac.html details worked example.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/generalized_unifrac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Generalized UniFrac beta diversity metric — generalized_unifrac","text":"Chen J, Bittinger K, Charlson ES, Hoffmann C, Lewis J, Wu GD, Collman RG, Bushman FD, Li H 2012. Associating microbiome composition environmental covariates using generalized UniFrac distances. Bioinformatics, 28(16). https://doi.org/10.1093/bioinformatics/bts342","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/generalized_unifrac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generalized UniFrac beta diversity metric — generalized_unifrac","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Generalized UniFrac distance matrix     generalized_unifrac(ex_counts, tree = ex_tree) #>            A          B          C #> B 0.61036006                       #> C 0.60260471 0.04873043            #> D 0.75764452 0.25262174 0.29851111          # Only calculate distances for A vs all.     generalized_unifrac(ex_counts, tree = ex_tree, pairs = 1:3) #>           A         B         C #> B 0.6103601                     #> C 0.6026047        NA           #> D 0.7576445        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/gower.html","id":null,"dir":"Reference","previous_headings":"","what":"Gower beta diversity metric — gower","title":"Gower beta diversity metric — gower","text":"Gower beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/gower.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gower beta diversity metric — gower","text":"","code":"gower(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/gower.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gower beta diversity metric — gower","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/gower.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Gower beta diversity metric — gower","text":"row (OTU) counts rescaled range 0-1. cases row value, values replaced 0. formulas , x y two columns (samples) scaled counts. n number rows (OTUs) counts.","code":"#   counts                 scaled recounts #        A B C  D                 A   B   C D #   OTU1 0 0 0  0    ->    OTU1 0.0 0.0 0.0 0 #   OTU2 0 8 9 10    ->    OTU2 0.0 0.8 0.9 1 #   OTU3 5 5 5  5    ->    OTU3 0.0 0.0 0.0 0 #   OTU4 2 0 0  0    ->    OTU4 1.0 0.0 0.0 0 #   OTU5 4 6 4  1    ->    OTU5 0.6 1.0 0.6 0 x <- c(0, 0, 0, 1, 0.6)   y <- c(0, 0.8, 0, 0, 1)   sum(abs(x-y)) / length(x)   #>  0.44"},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/gower.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gower beta diversity metric — gower","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Gower weighted distance matrix     gower(ex_counts) #>            A          B          C #> B 0.79333333                       #> C 0.81333333 0.08666667            #> D 0.96666667 0.17333333 0.22000000          # Gower unweighted distance matrix     gower(ex_counts, weighted = FALSE) #>     A   B   C #> B 0.8         #> C 0.8 0.0     #> D 1.0 0.2 0.2          # Only calculate distances for A vs all.     gower(ex_counts, pairs = 1:3) #>           A         B         C #> B 0.7933333                     #> C 0.8133333        NA           #> D 0.9666667        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/inv_simpson.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Simpson alpha diversity metric — inv_simpson","title":"Inverse Simpson alpha diversity metric — inv_simpson","text":"Inverse Simpson alpha diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/inv_simpson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Simpson alpha diversity metric — inv_simpson","text":"","code":"inv_simpson(counts, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/inv_simpson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Simpson alpha diversity metric — inv_simpson","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/inv_simpson.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Inverse Simpson alpha diversity metric — inv_simpson","text":"Pre-transformation: drop OTUs zero abundance. formulas , \\(x\\) single column (sample) counts. \\(p\\) relative abundances.","code":"x <- c(4, 0, 3, 2, 6)[-2]   p <- x / sum(x)   1 / sum(p * log(p))   #>  -0.7636352"},{"path":"https://cmmr.github.io/fastbiom/reference/inv_simpson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Inverse Simpson alpha diversity metric — inv_simpson","text":"Simpson EH 1949. Measurement diversity. Nature, 163. https://doi.org/10.1038/163688a0","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/inv_simpson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse Simpson alpha diversity metric — inv_simpson","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Inverse Simpson diversity values     inv_simpson(ex_counts) #>        A        B        C        D  #> 3.461538 1.898876 1.969231 1.198020           # Low diversity     inv_simpson(c(100, 1, 1, 1, 1)) # 1.08 #> [1] 1.081168          # High diversity     inv_simpson(c(20, 20, 20, 20, 20)) # 5 #> [1] 5          # Low richness     inv_simpson(1:3) # 2.57 #> [1] 2.571429          # High richness     inv_simpson(1:100) # 75.37 #> [1] 75.37313"},{"path":"https://cmmr.github.io/fastbiom/reference/jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Jaccard beta diversity metric — jaccard","title":"Jaccard beta diversity metric — jaccard","text":"Jaccard beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jaccard beta diversity metric — jaccard","text":"","code":"jaccard(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jaccard beta diversity metric — jaccard","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/jaccard.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Jaccard beta diversity metric — jaccard","text":"formulas , x y two columns (samples) counts. n number rows (OTUs) counts.","code":"x <- c(4, 0, 3, 2, 6)   y <- c(0, 8, 0, 0, 5)   bray <- sum(abs(x-y)) / sum(x+y)   2 * bray / (1 + bray)   #>  0.7826087"},{"path":"https://cmmr.github.io/fastbiom/reference/jaccard.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Jaccard beta diversity metric — jaccard","text":"Jaccard P 1908. Nouvellesrecherches sur la distribution florale. Bulletin de la Societe Vaudoise des Sciences Naturelles, 44(163). https://doi.org/10.5169/seals-268384","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/jaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Jaccard beta diversity metric — jaccard","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Jaccard weighted distance matrix     jaccard(ex_counts) #>           A         B         C #> B 0.7826087                     #> C 0.7600000 0.1875000           #> D 0.9600000 0.4000000 0.4117647          # Jaccard unweighted distance matrix     jaccard(ex_counts, weighted = FALSE) #>     A   B   C #> B 0.8         #> C 0.8 0.0     #> D 0.8 0.0 0.0          # Only calculate distances for A vs all.     jaccard(ex_counts, pairs = 1:3) #>           A         B         C #> B 0.7826087                     #> C 0.7600000        NA           #> D 0.9600000        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/kulczynski.html","id":null,"dir":"Reference","previous_headings":"","what":"Kulczynski beta diversity metric — kulczynski","title":"Kulczynski beta diversity metric — kulczynski","text":"Kulczynski beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/kulczynski.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kulczynski beta diversity metric — kulczynski","text":"","code":"kulczynski(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/kulczynski.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kulczynski beta diversity metric — kulczynski","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/kulczynski.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Kulczynski beta diversity metric — kulczynski","text":"formulas , x y two columns (samples) counts. n number rows (OTUs) counts.","code":"x <- c(4, 0, 3, 2, 6)   y <- c(0, 8, 0, 0, 5)   t <- sum(pmin(x,y))   1 - (t/sum(x) + t/sum(y)) / 2   #>  0.6410256"},{"path":"https://cmmr.github.io/fastbiom/reference/kulczynski.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Kulczynski beta diversity metric — kulczynski","text":"Kulcynski S 1927. Die Pflanzenassoziationen der Pieninen. Bulletin International de l'Academie Polonaise des Sciences et des Lettres. Classe des Sciences Mathematiques et Naturelles.","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/kulczynski.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kulczynski beta diversity metric — kulczynski","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Kulczynski weighted distance matrix     kulczynski(ex_counts) #>           A         B         C #> B 0.6410256                     #> C 0.6125000 0.0937500           #> D 0.9212121 0.2447552 0.2329545          # Kulczynski unweighted distance matrix     kulczynski(ex_counts, weighted = FALSE) #>       A     B     C #> B 0.625             #> C 0.625 0.000       #> D 0.625 0.000 0.000          # Only calculate distances for A vs all.     kulczynski(ex_counts, pairs = 1:3) #>           A         B         C #> B 0.6410256                     #> C 0.6125000        NA           #> D 0.9212121        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/manhattan.html","id":null,"dir":"Reference","previous_headings":"","what":"Manhattan beta diversity metric — manhattan","title":"Manhattan beta diversity metric — manhattan","text":"Manhattan beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/manhattan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manhattan beta diversity metric — manhattan","text":"","code":"manhattan(counts, weighted = TRUE, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/manhattan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manhattan beta diversity metric — manhattan","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. weighted TRUE, algorithm takes relative abundances account. FALSE, presence/absence considered. pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/manhattan.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Manhattan beta diversity metric — manhattan","text":"formulas , x y two columns (samples) counts. n number rows (OTUs) counts.","code":"x <- c(4, 0, 3, 2, 6)   y <- c(0, 8, 0, 0, 5)   sum(abs(x-y))   #>  18"},{"path":"https://cmmr.github.io/fastbiom/reference/manhattan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Manhattan beta diversity metric — manhattan","text":"Paul EB 2006. Manhattan distance. Dictionary Algorithms Data Structures. https://xlinux.nist.gov/dads/HTML/manhattanDistance.html","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/manhattan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Manhattan beta diversity metric — manhattan","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Manhattan weighted distance matrix     manhattan(ex_counts) #>    A  B  C #> B 18       #> C 19  3    #> D 24  6  7          # Manhattan unweighted distance matrix     manhattan(ex_counts, weighted = FALSE) #>   A B C #> B 4     #> C 4 0   #> D 4 0 0          # Only calculate distances for A vs all.     manhattan(ex_counts, pairs = 1:3) #>    A  B  C #> B 18       #> C 19 NA    #> D 24 NA NA"},{"path":"https://cmmr.github.io/fastbiom/reference/n_cpus.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of CPU cores. — n_cpus","title":"Number of CPU cores. — n_cpus","text":"thin wrapper around parallel::detectCores(.tests = TRUE, logical = TRUE) falls back 1 number CPU cores detected, system support pthreads. Consider using parallely::availableCores() place n_cpus() advanced interrogation system resources.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/n_cpus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of CPU cores. — n_cpus","text":"","code":"n_cpus()"},{"path":"https://cmmr.github.io/fastbiom/reference/n_cpus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of CPU cores. — n_cpus","text":"scalar integer, guaranteed least 1.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/n_cpus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of CPU cores. — n_cpus","text":"","code":"n_cpus() #> [1] 4"},{"path":"https://cmmr.github.io/fastbiom/reference/normalized_unifrac.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized UniFrac beta diversity metric — normalized_unifrac","title":"Normalized UniFrac beta diversity metric — normalized_unifrac","text":"Normalized UniFrac beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/normalized_unifrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized UniFrac beta diversity metric — normalized_unifrac","text":"","code":"normalized_unifrac(counts, tree = NULL, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/normalized_unifrac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized UniFrac beta diversity metric — normalized_unifrac","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/normalized_unifrac.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Normalized UniFrac beta diversity metric — normalized_unifrac","text":"Given \\(n\\) branches lengths \\(L\\) pair samples' abundances (\\(\\) \\(B\\)) branches: $$\\displaystyle \\frac{\\sum_{= 1}^{n} L_i|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|}{\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})}$$ See https://cmmr.github.io/fastbiom/articles/unifrac.html details worked example.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/normalized_unifrac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalized UniFrac beta diversity metric — normalized_unifrac","text":"Lozupone CA, Hamady M, Kelley ST, Knight R 2007. Quantitative Qualitative \\(\\beta\\) Diversity Measures Lead Different Insights Factors Structure Microbial Communities. Applied Environmental Microbiology, 73(5). https://doi.org/10.1128/AEM.01996-06","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/normalized_unifrac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized UniFrac beta diversity metric — normalized_unifrac","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # UniFrac weighted distance matrix     normalized_unifrac(ex_counts, tree = ex_tree) #>            A          B          C #> B 0.51102941                       #> C 0.49654112 0.04820717            #> D 0.69136961 0.22837370 0.27567790          # Only calculate distances for A vs all.     normalized_unifrac(ex_counts, tree = ex_tree, pairs = 1:3) #>           A         B         C #> B 0.5110294                     #> C 0.4965411        NA           #> D 0.6913696        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/rarefy.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefy OTU counts. — rarefy","title":"Rarefy OTU counts. — rarefy","text":"Sub-sample OTU observations samples equal number. called data non-integer abundances, values re-scaled integers 1 depth sum depth.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/rarefy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefy OTU counts. — rarefy","text":"","code":"rarefy(   counts,   depth = 0.1,   n_samples = NULL,   seed = 0,   times = NULL,   cpus = n_cpus() )"},{"path":"https://cmmr.github.io/fastbiom/reference/rarefy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefy OTU counts. — rarefy","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. depth many observations keep per sample. 0 < depth < 1, taken minimum percentage dataset's observations keep. Ignored n_samples specified. Default: 0.1 n_samples number samples keep. 0 < n_samples < 1, taken percentage samples keep. negative, number samples dropped. 0, samples kept. NULL, depth used instead. Default: NULL seed integer seed randomizing observations keep drop. need create different random rarefactions data, set seed different number time. times many independent rarefactions perform. set, rarefy() return list matrices. seeds matrix sequential, starting seed. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/rarefy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefy OTU counts. — rarefy","text":"","code":"# Create an OTU matrix with 4 samples (A-D) and 5 OTUs.     counts <- matrix(       data     = c(4,0,3,2,6,0,8,0,0,5,0,9,0,0,7,0,10,0,0,1),       nrow     = 5,       dimnames = list(paste0('OTU', 1:5), LETTERS[1:4]) )     counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1     colSums(counts) #>  A  B  C  D  #> 15 13 16 11           counts <- rarefy(counts, depth = 14)     counts #>      A B C D #> OTU1 4 0 0 0 #> OTU2 0 0 9 0 #> OTU3 3 0 0 0 #> OTU4 2 0 0 0 #> OTU5 5 0 5 0     colSums(counts) #>  A  B  C  D  #> 14  0 14  0"},{"path":"https://cmmr.github.io/fastbiom/reference/read_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a newick formatted phylogenetic tree. — read_tree","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"phylogenetic tree required computing UniFrac distance matrices. can load tree file providing tree string directly. tree must Newick format, also known parenthetic format New Hampshire format.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/read_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"","code":"read_tree(newick, underscores = FALSE)"},{"path":"https://cmmr.github.io/fastbiom/reference/read_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"newick Input data either file path, URL, Newick string. Compressed (gzip bzip2) files also supported. underscores TRUE, underscores unquoted names remain underscores. FALSE, underscores unquoted named converted spaces.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/read_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"phylo class object representing tree.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/read_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"","code":"tree <- read_tree(\"         (A:0.99,((B:0.87,C:0.89):0.51,(((D:0.16,(E:0.83,F:0.96)         :0.94):0.69,(G:0.92,(H:0.62,I:0.85):0.54):0.23):0.74,J:0.1         2):0.43):0.67);\")     class(tree) #> [1] \"phylo\""},{"path":"https://cmmr.github.io/fastbiom/reference/shannon.html","id":null,"dir":"Reference","previous_headings":"","what":"Shannon alpha diversity metric — shannon","title":"Shannon alpha diversity metric — shannon","text":"index considers number different OTUs (richness) evenly observations distributed among OTUs (evenness).","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/shannon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shannon alpha diversity metric — shannon","text":"","code":"shannon(counts, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/shannon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shannon alpha diversity metric — shannon","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/shannon.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Shannon alpha diversity metric — shannon","text":"Pre-transformation: drop OTUs zero abundance. formulas , \\(x\\) single column (sample) counts. \\(p_i\\) proportion \\(\\)-th OTU total community.","code":"x <- c(4, 0, 3, 2, 6)[-2]   p <- x / sum(x)   -sum(p * log(p))   #>  1.309526"},{"path":"https://cmmr.github.io/fastbiom/reference/shannon.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Shannon alpha diversity metric — shannon","text":"Shannon CE, Weaver W 1949. Mathematical Theory Communication. University Illinois Press.","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/shannon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shannon alpha diversity metric — shannon","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Shannon diversity values     shannon(ex_counts) #>         A         B         C         D  #> 1.3095258 0.6662784 0.6853142 0.3046361           # Low diversity     shannon(c(100, 1, 1, 1, 1)) # 0.22 #> [1] 0.2163426          # High diversity     shannon(c(20, 20, 20, 20, 20)) # 1.61 #> [1] 1.609438          # Low richness     shannon(1:3) # 1.01 #> [1] 1.011404          # High richness     shannon(1:100) # 4.42 #> [1] 4.416898"},{"path":"https://cmmr.github.io/fastbiom/reference/simpson.html","id":null,"dir":"Reference","previous_headings":"","what":"Simpson alpha diversity metric — simpson","title":"Simpson alpha diversity metric — simpson","text":"Gauges uniformity species within community. Simpson index 1 indicates one high abundance OTUs dominate community, indicative low diversity.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/simpson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simpson alpha diversity metric — simpson","text":"","code":"simpson(counts, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/simpson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simpson alpha diversity metric — simpson","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/simpson.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Simpson alpha diversity metric — simpson","text":"Pre-transformation: drop OTUs zero abundance. formulas , \\(x\\) single column (sample) counts. \\(p\\) relative abundances.","code":"x <- c(4, 0, 3, 2, 6)[-2]   p <- x / sum(x)   1 - sum(p * log(p))   #>  2.309526"},{"path":"https://cmmr.github.io/fastbiom/reference/simpson.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Simpson alpha diversity metric — simpson","text":"Simpson EH 1949. Measurement diversity. Nature, 163. https://doi.org/10.1038/163688a0","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/simpson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simpson alpha diversity metric — simpson","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Simpson diversity values     simpson(ex_counts) #>         A         B         C         D  #> 0.7111111 0.4733728 0.4921875 0.1652893           # Low diversity     simpson(c(100, 1, 1, 1, 1)) # 0.075 #> [1] 0.07507396          # High diversity     simpson(c(20, 20, 20, 20, 20)) # 0.8 #> [1] 0.8          # Low richness     simpson(1:3) # 0.61 #> [1] 0.6111111          # High richness     simpson(1:100) # 0.99 #> [1] 0.9867327"},{"path":"https://cmmr.github.io/fastbiom/reference/unweighted_unifrac.html","id":null,"dir":"Reference","previous_headings":"","what":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","title":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","text":"Unweighted UniFrac beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/unweighted_unifrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","text":"","code":"unweighted_unifrac(counts, tree = NULL, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/unweighted_unifrac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/unweighted_unifrac.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","text":"Given \\(n\\) branches lengths \\(L\\) pair samples' abundances (\\(\\) \\(B\\)) branches: $$\\displaystyle \\frac{\\sum_{= 1}^{n} L_i(|A_i - B_i|)}{\\sum_{= 1}^{n} L_i(max(A_i,B_i))}$$ Abundances \\(\\) \\(B\\) coded 1 0 indicate presence absence, respectively, branch. See https://cmmr.github.io/fastbiom/articles/unifrac.html details worked example.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/unweighted_unifrac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","text":"Lozupone C, Knight R 2005. UniFrac: new phylogenetic method comparing microbial communities. Applied Environmental Microbiology, 71(12). https://doi.org/10.1128/AEM.71.12.8228-8235.2005","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/unweighted_unifrac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unweighted UniFrac beta diversity metric — unweighted_unifrac","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Unweighted UniFrac distance matrix     unweighted_unifrac(ex_counts, tree = ex_tree) #>           A         B         C #> B 0.6666667                     #> C 0.6666667 0.0000000           #> D 0.6666667 0.0000000 0.0000000          # Only calculate distances for A vs all.     unweighted_unifrac(ex_counts, tree = ex_tree, pairs = 1:3) #>           A         B         C #> B 0.6666667                     #> C 0.6666667        NA           #> D 0.6666667        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/variance_adjusted_unifrac.html","id":null,"dir":"Reference","previous_headings":"","what":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","title":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","text":"Variance Adjusted UniFrac beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/variance_adjusted_unifrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","text":"","code":"variance_adjusted_unifrac(counts, tree = NULL, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/variance_adjusted_unifrac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/variance_adjusted_unifrac.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","text":"Given \\(n\\) branches lengths \\(L\\) pair samples' abundances (\\(\\) \\(B\\)) branches: $$\\displaystyle \\frac{\\sum_{= 1}^{n} L_i\\displaystyle \\frac{|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|}{\\sqrt{(A_i + B_i)(A_T + B_T - A_i - B_i)}} }{\\sum_{= 1}^{n} L_i\\displaystyle \\frac{\\frac{A_i}{A_T} + \\frac{B_i}{B_T}}{\\sqrt{(A_i + B_i)(A_T + B_T - A_i - B_i)}} }$$ See https://cmmr.github.io/fastbiom/articles/unifrac.html details worked example.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/variance_adjusted_unifrac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","text":"Chang Q, Luan Y, Sun F 2011. Variance adjusted weighted UniFrac: powerful beta diversity measure comparing communities based phylogeny. BMC Bioinformatics, 12. https://doi.org/10.1186/1471-2105-12-118","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/variance_adjusted_unifrac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Variance Adjusted UniFrac beta diversity metric — variance_adjusted_unifrac","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Variance Adjusted UniFrac distance matrix     variance_adjusted_unifrac(ex_counts, tree = ex_tree) #>            A          B          C #> B 0.56393816                       #> C 0.55815265 0.04820717            #> D 0.70868011 0.22837370 0.27567790          # Only calculate distances for A vs all.     variance_adjusted_unifrac(ex_counts, tree = ex_tree, pairs = 1:3) #>           A         B         C #> B 0.5639382                     #> C 0.5581527        NA           #> D 0.7086801        NA        NA"},{"path":"https://cmmr.github.io/fastbiom/reference/weighted_unifrac.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted UniFrac beta diversity metric — weighted_unifrac","title":"Weighted UniFrac beta diversity metric — weighted_unifrac","text":"Weighted UniFrac beta diversity metric","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/weighted_unifrac.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted UniFrac beta diversity metric — weighted_unifrac","text":"","code":"weighted_unifrac(counts, tree = NULL, pairs = NULL, cpus = n_cpus())"},{"path":"https://cmmr.github.io/fastbiom/reference/weighted_unifrac.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted UniFrac beta diversity metric — weighted_unifrac","text":"counts OTU abundance matrix column sample, row OTU. object coercible .matrix() can given , well phyloseq, rbiom, SummarizedExperiment, TreeSummarizedExperiment objects. tree phylo-class object representing phylogenetic tree OTUs counts. OTU identifiers given colnames(counts) must present tree. Can omitted tree embedded counts object attr(counts, 'tree'). pairs combinations samples distances calculated ? default value (NULL) calculates -vs-. Provide numeric logical vector specifying positions distance matrix calculate. See examples. cpus many parallel processing threads used. default, n_cpus(), use logical CPU cores.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/weighted_unifrac.html","id":"calculation","dir":"Reference","previous_headings":"","what":"Calculation","title":"Weighted UniFrac beta diversity metric — weighted_unifrac","text":"Given \\(n\\) branches lengths \\(L\\) pair samples' abundances (\\(\\) \\(B\\)) branches: $$\\sum_{= 1}^{n} L_i|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|$$ See https://cmmr.github.io/fastbiom/articles/unifrac.html details worked example.","code":""},{"path":"https://cmmr.github.io/fastbiom/reference/weighted_unifrac.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted UniFrac beta diversity metric — weighted_unifrac","text":"Lozupone CA, Hamady M, Kelley ST, Knight R 2007. Quantitative Qualitative \\(\\beta\\) Diversity Measures Lead Different Insights Factors Structure Microbial Communities. Applied Environmental Microbiology, 73(5). https://doi.org/10.1128/AEM.01996-06","code":""},{"path":[]},{"path":"https://cmmr.github.io/fastbiom/reference/weighted_unifrac.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted UniFrac beta diversity metric — weighted_unifrac","text":"","code":"# Example counts matrix     ex_counts #>      A B C  D #> OTU1 4 0 0  0 #> OTU2 0 8 9 10 #> OTU3 3 0 0  0 #> OTU4 2 0 0  0 #> OTU5 6 5 7  1          # Weighted UniFrac distance matrix     weighted_unifrac(ex_counts, tree = ex_tree) #>           A         B         C #> B 1.1405128                     #> C 1.0766667 0.1163462           #> D 1.7866667 0.6461538 0.7625000          # Only calculate distances for A vs all.     weighted_unifrac(ex_counts, tree = ex_tree, pairs = 1:3) #>          A        B        C #> B 1.140513                   #> C 1.076667       NA          #> D 1.786667       NA       NA"}]
